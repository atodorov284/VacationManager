@model VacationManager.Models.TimeOff
@using VacationManager.ExtentionMethods;

@{
    ViewData["Title"] = "Edit";
    Layout = "_Layout";
    User loggedUser = this.ViewContext.HttpContext.Session.GetObject<User>("loggedUser");
}
<h1>Edit</h1>

<h4>TimeOff</h4>
<div class="row">
    <div class="col-md-4">
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.CreatedOn)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.CreatedOn)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.RequestingUser)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.RequestingUser)
            </dd>
        </dl>
        <div class="form-container">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="TimeOffId" />
                <input type="hidden" asp-for="RequestingUser" />
                <input type="hidden" asp-for="CreatedOn" />
                <div class="form-group form-check">
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.From)
                        <input type="date" class="form-check-input" asp-for="From" />
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.To)
                        <input type="date" class="form-check-input" asp-for="To" />
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.Type)
                        <select id="Type" name="Type">
                            <option value="Paid">Paid</option>
                            <option value="Unpaid">Unpaid</option>
                            <option value="Sick">Sick</option>
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </label>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.HalfDay)
                        <input class="form-check-input" asp-for="HalfDay" />
                    </label>
                </div>
                @if (loggedUser.Role > 1)
                {
        <div class="form-group form-check">
            <label class="form-check-label">
                @Html.DisplayNameFor(model => model.Approved)
                <input class="form-check-input" asp-for="Approved" /> 
            </label>
        </div> }
                    else
                    {
        <input type="hidden" asp-for="Approved" />            }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
</div>

<div>
    <a class="btn-primary" asp-action="Index">Back To List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
