@model VacationManager.Models.Project
@using VacationManager.ExtentionMethods;

@{
    ViewData["Title"] = "Edit";
    Layout = "_Layout";
    IEnumerable<string> teams = ViewData["Teams"] as IEnumerable<string>;
    User loggedUser = this.ViewContext.HttpContext.Session.GetObject<User>("loggedUser");
}

@if (loggedUser.Role == 3)
{
    <h1>Edit</h1>

    <h4>Project</h4>
        <div class="form-container">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="ProjectId" />
                <input type="hidden" asp-for="Teams" />
                <input type="hidden" asp-for="TeamNames" />
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TeamToAdd" class="control-label"></label>
                    <select id="TeamToAdd" name="TeamToAdd">
                        <option value="None">None</option>
                        @if (teams != null)
                        {
                            @if (teams.Count() > 0)
                            {
                    @foreach (var team in teams)
                    {
                    <option value=@team>@team</option>}}
                        }

                    </select>
                    <span asp-validation-for="TeamToAdd" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TeamToRemove" class="control-label"></label>
                    <select id="TeamToRemove" name="TeamToRemove">
                        <option value="None">None</option>
                        @if (teams.Count() > 0)
                        {
                            
                            @foreach (var team in teams)
                            {
                                <option value=@team>@team</option>
                            }
                            
                        }
                    </select>
                    <span asp-validation-for="TeamToRemove" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>

}

            else
            {
                <p class="welcomeMsg">Forbidden</p>
            }
<div>
    <a class="btn-primary" asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
